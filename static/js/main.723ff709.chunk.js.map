{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/services/Pixabay.js","components/Button/Button.js","components/Loader/Loader.js","components/Modal/Modal.js","App.js","index.js"],"names":["ImageGalleryItem","webformatURL","showImageHandle","className","src","alt","onClick","ImageGallery","showImageHandler","images","map","image","index","largeImageURL","id","Searchbar","onSubmit","useState","value","setValue","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","onChange","e","target","propType","img","PropTypes","string","isRequired","func","fetchImages","searchItem","page","a","fetch","rawResult","ok","json","result","Button","loadMoreHandler","LoaderFunc","color","height","width","modalRoot","document","querySelector","Modal","onClose","bigURL","useEffect","window","removeEventListener","keyDownHandler","code","createPortal","currentTarget","maxPages","App","setImages","searchValue","setSearchValue","setPage","isLoading","setIsLoading","showModal","setShowModal","setError","prev","searchImagesHandler","scrollToHandler","top","documentElement","scrollHeight","setTimeout","scrollTo","behavior","total","Math","ceil","totalHits","hits","info","console","toString","searchString","length","imageUrl","min","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.723ff709.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({ webformatURL, showImageHandle }) {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={webformatURL}\n        alt=\"\"\n        className=\"ImageGalleryItem-image\"\n        onClick={showImageHandle}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propType = {\n  img: PropTypes.string.isRequired,\n  showImageHandle: PropTypes.func.isRequired,\n};\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\n\nexport default function ImageGallery({ showImageHandler, images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => {\n        return (\n          <ImageGalleryItem\n            key={image.id}\n            webformatURL={image.webformatURL}\n            showImageHandle={showImageHandler(image.largeImageURL)}\n            index={index}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [value, setValue] = useState('');\n\n  const changeHandler = e => {\n    setValue(e.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (value.trim() === '') {\n      toast.error('Please enter search request!');\n      return;\n    }\n    onSubmit(value);\n    setValue('');\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={submitHandler}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          onChange={changeHandler}\n          value={value}\n        />\n      </form>\n    </header>\n  );\n}\n","const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '23070790-299ad5e8dfdc75cc527267990';\n\nconst fetchImages = async (searchItem, page) => {\n  const rawResult = await fetch(\n    `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n\n  if (!rawResult.ok) {\n    throw rawResult;\n  }\n\n  const result = await rawResult.json();\n\n  return result;\n};\n\nexport default fetchImages;\n","import PropTypes from 'prop-types';\n\nexport default function Button({ loadMoreHandler }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={loadMoreHandler}>\n      Load more\n    </button>\n  );\n}\nButton.propType = {\n  loadMoreHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function LoaderFunc() {\n  return (\n    <div className=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#303f9f\" height={80} width={80} />\n    </div>\n  );\n}\n","import { createPortal } from 'react-dom';\nimport { useEffect } from 'react';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, bigURL }) {\n  useEffect(() => {\n    window.removeEventListener('keydown', keyDownHandler);\n  });\n  const keyDownHandler = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const overlayClickHandler = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={overlayClickHandler}>\n      <div className=\"Modal\">\n        <img src={bigURL} alt=\"\" />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport fetchImages from './components/services/Pixabay';\nimport Button from './components/Button/Button';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\n\nlet maxPages = 0;\nlet bigURL = '';\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState('');\n  // let maxPages = 0;\n  // let bigURL = '';\n\n  useEffect(\n    prev => {\n      if (searchValue === '') {\n        return;\n      } else if (\n        (prev !== searchValue && searchValue !== '') ||\n        prev !== page\n      ) {\n        searchImagesHandler();\n      }\n    },\n    [searchValue, page],\n  );\n\n  const closeModal = () => {\n    bigURL = '';\n    setShowModal(false);\n  };\n\n  const showImageHandler = imageUrl => () => {\n    bigURL = imageUrl;\n    setShowModal(true);\n  };\n  const scrollToHandler = () => {\n    const top = document.documentElement.scrollHeight - 150;\n\n    setTimeout(() => {\n      window.scrollTo({\n        top,\n        behavior: 'smooth',\n      });\n    }, 300);\n  };\n  const searchImagesHandler = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      const result = await fetchImages(searchValue, page);\n\n      if (result.total !== 0) {\n        maxPages = Math.ceil(result.totalHits / 12);\n\n        setImages(prev => [...prev, ...result.hits]);\n      } else {\n        toast.info(`По вашему запросу ${searchValue} ничего не найдено!`);\n        setImages([]);\n      }\n    } catch (error) {\n      console.error(error);\n      setError(error.toString());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadMoreHandler = () => {\n    scrollToHandler();\n    setPage(() => Math.min(maxPages, page + 1));\n  };\n\n  const onSubmitHandler = searchString => {\n    maxPages = 0;\n    setImages([]);\n    setSearchValue(searchString);\n    setPage(1);\n  };\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={onSubmitHandler} />\n      {images.length > 0 && (\n        <ImageGallery\n          images={images}\n          showImageHandler={showImageHandler}\n          scrollToHandler={scrollToHandler}\n        />\n      )}\n      {error && <p className=\"ErrorText\">{error}</p>}\n      {isLoading && <Loader />}\n      {images.length > 0 && <Button loadMoreHandler={loadMoreHandler} />}\n      {showModal && <Modal bigURL={bigURL} onClose={closeModal}></Modal>}\n      <ToastContainer autoClose={2500} />\n    </div>\n  );\n}\n// class App extends Component {\n//   state = {\n//     images: [],\n//     searchValue: '',\n//     page: 1,\n//     isLoading: false,\n//     showModal: false,\n//     error: '',\n//   };\n\n//   maxPages = 0;\n//   bigURL = '';\n//   newElementHight = 0;\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (\n//       (prevState.searchValue !== this.state.searchValue &&\n//         this.state.searchValue !== '') ||\n//       prevState.page !== this.state.page\n//     ) {\n//       this.searchImagesHandler();\n//     }\n//   }\n\n// closeModal = () => {\n//   this.bigURL = '';\n//   this.setState({ showModal: false });\n// };\n\n// showImageHandler = imageUrl => () => {\n//   this.bigURL = imageUrl;\n//   this.setState({ showModal: true });\n// };\n\n//   scrollToHandler = () => {\n//     const top = document.documentElement.scrollHeight - 150;\n\n//     setTimeout(() => {\n//       window.scrollTo({\n//         top,\n//         behavior: 'smooth',\n//       });\n//     }, 300);\n//   };\n\n//   searchImagesHandler = async () => {\n//     const { searchValue, page } = this.state;\n//     this.setState({ isLoading: true, error: '' });\n//     try {\n//       const result = await fetchImages(searchValue, page);\n\n//       if (result.total !== 0) {\n//         this.maxPages = Math.ceil(result.totalHits / 12);\n\n//         this.setState(({ images }) => ({\n//           images: [...images, ...result.hits],\n//         }));\n//       } else {\n//         toast.info(`По вашему запросу ${searchValue} ничего не найдено!`);\n//         this.setState(() => ({\n//           images: [],\n//         }));\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       this.setState(() => ({ error: error.toString() }));\n//     } finally {\n//       this.setState({ isLoading: false });\n//     }\n//   };\n\n// loadMoreHandler = () => {\n//   this.scrollToHandler();\n//   this.setState(() => ({\n//     page: Math.min(this.maxPages, this.state.page + 1),\n//   }));\n// };\n\n//   onSubmitHandler = searchString => {\n//     this.maxPages = 0;\n\n//     this.setState(() => ({\n//       images: [],\n//       searchValue: searchString,\n//       page: 1,\n//     }));\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <Searchbar onSubmit={this.onSubmitHandler} />\n//         {this.state.error ? (\n//           <p className=\"ErrorText\">{this.state.error}</p>\n//         ) : (\n//           <ImageGallery\n//             images={this.state.images}\n//             showImageHandler={this.showImageHandler}\n//             scrollToHandler={this.scrollToHandler}\n//           />\n//         )}\n//         {this.state.isLoading && <Loader />}\n//         {this.state.page < this.maxPages && (\n//           <Button loadMoreHandler={this.loadMoreHandler} />\n//         )}\n//         {this.state.showModal && (\n//           <Modal bigURL={this.bigURL} onClose={this.closeModal}></Modal>\n//         )}\n//         <ToastContainer autoClose={2500} />\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}